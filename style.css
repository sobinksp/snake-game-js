/* @import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300&family=VT323&display=swap"); */
@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300&display=swap");
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Roboto Condensed", sans-serif;
  /* font-family: 'VT323', monospace; */
}

body {
  display: flex;
  align-items: center;
  justify-content: center; /* defines space distribution between content  */
  min-height: 100vh; /* defines minimum height of an element */
  /* vh is viewport height (viewport is user's visible area */
  background-color: rgb(153, 155, 156);
}

.container {
  width: 65vmin;
  height: 70vmin;
  background-color: rgb(49, 47, 45);
  display: flex;
  flex-direction: column; /*defines how flex items are placed in the flex container*/
  border-style: ridge;
  border-radius: 4px;
  /* overflow: hidden; */
  border-color: rgb(11, 12, 12);
}

.game-details {
  color: rgb(210, 213, 216);
  font-size: 1.2rem;
  padding: 20px 27px;
  display: flex;
  justify-content: space-between;
}

.board {
  width: 100%;
  height: 100%;
  background-color: white;
  display: grid;
  grid-template: repeat(30, 1fr) / repeat(30, 1fr);
  /*
    grid-template : grid-template-rows / grid-template-columns
    repeat(repeat count, tracks) 
    repeat count: number of times that the track should be repeated. 
    tracks: set of tracks that will be repeated. 

    Fr is a fractional unit and 1fr is for 1 part of the availabel space. 
  */
}
